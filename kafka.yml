riemann :
    host     : 172.28.128.3
    port     : 5555
    interval : 5
jmx :
    host : ec2-52-38-160-141.us-west-2.compute.amazonaws.com
    port : 9999

queries :
    # Examples: service set to "kafka.broker.topics.all"
    #               => Riemann Event{:host "localhost-9999" :service "kafka.broker.topics.alli.BytesIn" ...}
    #               => Graphite "localhost-9999.kafka.broker.topics.all.BytesIn"
    #
    #           service not set,
    #               => Riemann Event{:host "localhost-9999" :service "kafka:type=kafka.LogFlushStats" ...}
    #               => Graphite "localhost-9999.kafka:type=kafka.LogFlushStats.AvgFlushMs"
    # Service is the name which is required to be passed to riemann. Final Service name would be <service.att>
    #
    # Attribute Threshold
    # attr : [ [Mbean Attribute name, [warning low value, warning up value], [critical low value, critical high value] ],...]
    # In case if the values which dont require the threshold, you can set the lowest and largest value possible, so that it doesn't show
-   service : kafka.os
    obj     : "java.lang:type=OperatingSystem"
    attr    : [[CommittedVirtualMemorySize,[900000000,2000000000],[800000000,3000000000]] , [TotalPhysicalMemorySize,[900000000,2000000000],[800000000,3000000000]]]
    description : "kafka os"
    ttl     : 60
    tags    : [ kafka, development ]
-   service : kafka.broker.state
    obj     : "kafka.server:type=KafkaServer,name=BrokerState"
    attr    : [[Value,[-1,9999],[-1,9999]]]
    description : "kafka server metrics"
    ttl     : 60
    tags    : [ kafka, development ]
-   service : kafka.broker.topic.BytesInPerSec
    obj     : "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec"
    attr    : [[MeanRate,[-1,99999999],[-1,99999999]]]
    description : "kafka server metrics"
    ttl     : 60
    tags    : [ kafka, development ]
